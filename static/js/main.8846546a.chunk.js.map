{"version":3,"sources":["components/Items/Items.tsx","components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Items","items","map","item","Pagination","page","total","perPage","onNavigate","onPageChange","currentAmountPages","useMemo","Math","ceil","Number","pages","Array","from","keys","i","className","classNames","disabled","type","onClick","active","length","to","numbers","n","push","getNumbers","App","useSearchParams","searchParams","setSearchParams","get","indexOfLastItem","indexOfFirstitem","visibleItems","slice","getItem","index","split","itemsFrom","itemsTo","id","value","onChange","e","target","htmlFor","path","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8846546a.chunk.js","sourcesContent":["import { FC } from 'react';\n\ninterface Props {\n  items: string[];\n}\n\nexport const Items: FC<Props> = ({ items }) => (\n  <ul>\n    {items.map(item => (\n      <li key={item} data-cy=\"item\">\n        {item}\n      </li>\n    ))}\n  </ul>\n);\n","import { FC, useMemo } from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  total: number;\n  page: string;\n  perPage: string;\n  onNavigate: (page: number) => void;\n  onPageChange: (page: string) => void;\n}\n\nexport const Pagination: FC<Props> = ({\n  page,\n  total,\n  perPage,\n  onNavigate,\n  onPageChange,\n}) => {\n  const currentAmountPages = useMemo(() => Math\n    .ceil(total / Number(perPage)),\n  [total, perPage]);\n\n  const pages = useMemo(() => Array\n    .from(Array(currentAmountPages).keys())\n    .map(i => i + 1),\n  [total, perPage]);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: page === '1' },\n      )}\n      >\n        <button\n          type=\"button\"\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          aria-disabled={page === '1'}\n          onClick={() => onNavigate(-1)}\n        >\n          «\n        </button>\n      </li>\n      {pages.map(item => (\n        <li\n          key={item}\n          className={classNames('page-item', {\n            active: +page === item,\n          })}\n        >\n          <button\n            type=\"button\"\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={() => onPageChange(`${item}`)}\n          >\n            {item}\n          </button>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item',\n        { disabled: +page === pages.length },\n      )}\n      >\n        <button\n          type=\"button\"\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          aria-disabled={page ? +page === pages.length : false}\n          onClick={() => onNavigate(1)}\n        >\n          »\n        </button>\n      </li>\n    </ul>\n  );\n};\n","import React, { useMemo } from 'react';\nimport './App.css';\nimport { useSearchParams } from 'react-router-dom';\nimport { Items } from './components/Items';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams({\n    page: '1',\n    perPage: '5',\n  });\n  const total = 42;\n  const page = useMemo(() => searchParams.get('page') || '1',\n    [searchParams.get('page')]);\n\n  const perPage = useMemo(() => searchParams.get('perPage') || '5',\n    [searchParams.get('perPage')]);\n\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target;\n\n    setSearchParams({ page: '1', perPage: value });\n  };\n\n  const handlePageChange = (current: string) => {\n    if (current === page) {\n      return;\n    }\n\n    setSearchParams({ page: current, perPage });\n  };\n\n  const handleNavigate = (path: number) => setSearchParams({ page: `${+page + path}`, perPage });\n\n  const indexOfLastItem = useMemo(() => +page * +perPage,\n    [page, perPage]);\n\n  const indexOfFirstitem = useMemo(() => indexOfLastItem - +perPage,\n    [searchParams.get('perPage'), searchParams.get('page')]);\n\n  const visibleItems = useMemo(() => items\n    .slice(indexOfFirstitem, indexOfLastItem),\n  [perPage, page]);\n\n  const getItem = (index: number) => visibleItems[index].split(' ')[1];\n\n  const itemsFrom = useMemo(() => getItem(0), []);\n  const itemsTo = useMemo(() => getItem(visibleItems.length - 1), []);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} \n          (items ${itemsFrom} - ${itemsTo} of ${items.length})\n        `}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        page={page}\n        total={total}\n        perPage={perPage}\n        onNavigate={handleNavigate}\n        onPageChange={handlePageChange}\n      />\n      <Items items={visibleItems} />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}