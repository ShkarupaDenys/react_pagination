{"version":3,"sources":["components/Items/Items.tsx","components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Items","items","map","item","Pagination","total","perPage","page","onPageChange","onNextChange","onPrevChange","currentAmountPages","Math","ceil","pages","Array","from","keys","i","className","classNames","disabled","type","onClick","active","length","to","numbers","n","push","getNumbers","App","useState","selectPerPage","setPage","useSearchParams","searchParams","setSearchParams","useEffect","set","indexOfLastItem","indexOfFirstitem","visibleItems","slice","getItem","index","split","itemsFrom","itemsTo","id","value","onChange","e","target","htmlFor","current","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d439861e.chunk.js","sourcesContent":["import { FC } from 'react';\n\ninterface Props {\n  items: string[];\n}\n\nexport const Items: FC<Props> = ({ items }) => (\n  <ul>\n    {items.map(item => (\n      <li key={item} data-cy=\"item\">\n        {item}\n      </li>\n    ))}\n  </ul>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  page: number;\n  onPageChange: (page: number) => void;\n  onNextChange: () => void;\n  onPrevChange: () => void;\n}\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  page,\n  onPageChange,\n  onNextChange,\n  onPrevChange,\n}) => {\n  const currentAmountPages = Math.ceil(total / perPage);\n  const pages = Array.from(Array(currentAmountPages)\n    .keys())\n    .map(i => i + 1);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: page === 1 },\n      )}\n      >\n        <button\n          type=\"button\"\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          aria-disabled={page === 1}\n          onClick={onPrevChange}\n        >\n          «\n        </button>\n      </li>\n      {pages.map(item => (\n        <li\n          key={item}\n          className={classNames('page-item', {\n            active: page === item,\n          })}\n        >\n          <button\n            type=\"button\"\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={() => onPageChange(item)}\n          >\n            {item}\n          </button>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item',\n        { disabled: page === pages.length },\n      )}\n      >\n        <button\n          type=\"button\"\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          aria-disabled={page === pages.length}\n          onClick={onNextChange}\n        >\n          »\n        </button>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { useSearchParams } from 'react-router-dom';\nimport { Items } from './components/Items';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, selectPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams({});\n\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target;\n\n    selectPerPage(+value);\n    setPage(1);\n  };\n\n  const handlePageChange = (current: number) => setPage(current);\n\n  useEffect(() => {\n    searchParams.set('page', `${page}`);\n    searchParams.set('perPage', `${perPage}`);\n    setSearchParams(searchParams);\n  }, [page, perPage]);\n\n  const handleNextPage = () => setPage(prev => prev + 1);\n\n  const handlePrevPage = () => setPage(prev => prev - 1);\n\n  const indexOfLastItem = +page * perPage;\n  const indexOfFirstitem = indexOfLastItem - perPage;\n  const visibleItems = items.slice(indexOfFirstitem, indexOfLastItem);\n\n  const getItem = (index: number) => visibleItems[index].split(' ')[1];\n\n  const itemsFrom = getItem(0);\n  const itemsTo = getItem(visibleItems.length - 1);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`\n          Page ${page} \n          (items ${itemsFrom} - ${itemsTo} of ${items.length})\n        `}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={perPage}\n        page={page}\n        onPageChange={handlePageChange}\n        onNextChange={handleNextPage}\n        onPrevChange={handlePrevPage}\n      />\n      <Items items={visibleItems} />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}