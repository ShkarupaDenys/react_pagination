{"version":3,"sources":["components/Items/Items.tsx","components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Items","items","map","item","Pagination","page","total","perPage","onPageChange","onNextChange","onPrevChange","currentAmountPages","useMemo","Math","ceil","Number","pages","Array","from","keys","i","className","classNames","disabled","type","onClick","active","length","to","numbers","n","push","getNumbers","App","useSearchParams","searchParams","setSearchParams","get","indexOfLastItem","indexOfFirstitem","visibleItems","slice","getItem","index","split","itemsFrom","itemsTo","id","value","onChange","e","target","htmlFor","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e29acd7d.chunk.js","sourcesContent":["import { FC } from 'react';\n\ninterface Props {\n  items: string[];\n}\n\nexport const Items: FC<Props> = ({ items }) => (\n  <ul>\n    {items.map(item => (\n      <li key={item} data-cy=\"item\">\n        {item}\n      </li>\n    ))}\n  </ul>\n);\n","import { FC, useMemo } from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  total: number;\n  page: string;\n  perPage: string;\n  onNextChange: () => void;\n  onPrevChange: () => void;\n  onPageChange: (page: string) => void;\n}\n\nexport const Pagination: FC<Props> = ({\n  page,\n  total,\n  perPage,\n  onPageChange,\n  onNextChange,\n  onPrevChange,\n}) => {\n  const currentAmountPages = useMemo(() => Math\n    .ceil(total / Number(perPage)),\n  [total, perPage]);\n\n  const pages = useMemo(() => Array\n    .from(Array(currentAmountPages).keys())\n    .map(i => i + 1), [total, perPage]);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: page === '1' },\n      )}\n      >\n        <button\n          type=\"button\"\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          aria-disabled={page === '1'}\n          onClick={onPrevChange}\n        >\n          «\n        </button>\n      </li>\n      {pages.map(item => (\n        <li\n          key={item}\n          className={classNames('page-item', {\n            active: +page === item,\n          })}\n        >\n          <button\n            type=\"button\"\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={() => onPageChange(`${item}`)}\n          >\n            {item}\n          </button>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item',\n        { disabled: +page === pages.length },\n      )}\n      >\n        <button\n          type=\"button\"\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          aria-disabled={page ? +page === pages.length : false}\n          onClick={onNextChange}\n        >\n          »\n        </button>\n      </li>\n    </ul>\n  );\n};\n","import React, { useMemo } from 'react';\nimport './App.css';\nimport { useSearchParams } from 'react-router-dom';\nimport { Items } from './components/Items';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams({\n    page: '1',\n    perPage: '5',\n  });\n  const total = 42;\n  const page = useMemo(() => searchParams.get('page') || '1',\n    [searchParams.get('page')]);\n\n  const perPage = useMemo(() => searchParams.get('perPage') || '5',\n    [searchParams.get('perPage')]);\n\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target;\n\n    setSearchParams({ page: '1', perPage: value });\n  };\n\n  const handlePageChange = (current: string) => {\n    if (current === page) {\n      return;\n    }\n\n    setSearchParams({ page: current, perPage });\n  };\n\n  const handleNextPage = () => setSearchParams({ page: `${Number(page) + 1}`, perPage });\n\n  const handlePrevPage = () => setSearchParams({ page: `${Number(page) - 1}`, perPage });\n\n  const indexOfLastItem = useMemo(() => +page * +perPage,\n    [searchParams.get('page'), searchParams.get('perPage')]);\n\n  const indexOfFirstitem = useMemo(() => indexOfLastItem - +perPage,\n    [searchParams.get('perPage'), searchParams.get('page')]);\n\n  const visibleItems = useMemo(() => items\n    .slice(indexOfFirstitem, indexOfLastItem),\n  [perPage, page]);\n\n  const getItem = (index: number) => visibleItems[index].split(' ')[1];\n\n  const itemsFrom = getItem(0);\n  const itemsTo = getItem(visibleItems.length - 1);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} \n          (items ${itemsFrom} - ${itemsTo} of ${items.length})\n        `}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        page={page}\n        total={total}\n        perPage={perPage}\n        onNextChange={handleNextPage}\n        onPrevChange={handlePrevPage}\n        onPageChange={handlePageChange}\n      />\n      <Items items={visibleItems} />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}